@model DataTransferObject.Customer.CustomerDTO
@Scripts.Render("~/Script/unobstrasive")
@Scripts.Render("~/Script/unobtrusive-script")
@{
    ViewBag.Title = "Customer Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Ajax.BeginForm("AddCustomer", "Customer", new AjaxOptions { OnSuccess = "Customer.initCustomerSuccess" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h2> Costumer Details </h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.HiddenFor(Model => Model.id)
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <h2> Device Details </h2>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Serial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Serial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Serial, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.imei_1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.imei_1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imei_1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.imei_2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.imei_2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imei_2, "", new { @class = "text-danger" })
                <span class="control-label text-info">If a mobile has more than one Imei. </span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Brand, new SelectList(Model.brandList, "id", "BrandName"), "--Select Brand--", new { @class = "form-control select2" })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.model, new SelectList(Model.modelList, "id", "modelName"), "--Select Model--", new { @class = "form-control select2" })
                @Html.ValidationMessageFor(model => model.model, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.fault, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.fault, new SelectList(Model.faultList, "id", "faultName"), "--Select Fault--", new { @class = "form-control select2" })
                @Html.ValidationMessageFor(model => model.fault, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.datetime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.datetime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.datetime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Images</label>
            <div class="col-md-10">
                <input type="file" id="fileUpload" value="Browse" multiple class="form-control" accept="image/*" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="Javascript:void(0);" onclick="Customer.initCamera();" class="btn btn-danger"> <span class="glyphicon glyphicon-camera"></span> Capture Images</a>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 text-right">
                <a href="/Customer/Index" class="btn btn-default" style="width:10%">Back</a>
                <input type="submit" value="Save" class="btn btn-primary" style="width:10%" />
            </div>
        </div>
    </div>
}

<br />
<h2> Device Images </h2>
<hr />
<div class="row">
    @foreach (var item in (List<DataTransferObject.Customer.DeviceImagesDTO>)ViewBag.images)
    {
        <div class="col-md-4">
            <div class="thumbnail">
                <a href="@item.path">
                    <img src="@item.path" alt="Image" style="width:100%">
                    <div class="caption">
                        <span class="glyphicon glyphicon-trash"></span> &nbsp; <span class="glyphicon glyphicon-download-alt"></span>
                    </div>
                </a>
            </div>
        </div>
    }
</div>



<div id="captureModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Capture</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="fileupload-new thumbnail" id="my_camera" style="width:320px; height:240px;">

                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="fileupload-new thumbnail" id="my_result">
                            <img class="img img-responsive img-thumbnail" style="width: 100%; height:100%" src="http://www.placehold.it/200x150/EFEFEF/AAAAAA&text=no+image" alt="Image" id="imgCaptured">
                        </div>
                        <span id="txtLabel" class="text-primary hide">Image Saved</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="Customer.initCameraSnap();">Capture</button>
                <button type="button" class="btn btn-default" onclick="Customer.initCameraClose();">Close</button>
            </div>
        </div>
    </div>
</div>


<script src="~/assets/webcam.js"></script>
<script src="~/ProjectScript/Customer/Customer.js"></script>
<script type="text/javascript">
    $(function () {
        $('.select2').select2({
            width: '100%'
        });
        $('.datepicker ').datetimepicker();
    });
</script>


